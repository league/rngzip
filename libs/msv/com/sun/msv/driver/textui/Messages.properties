
ReportErrorHandler.TooManyErrors =\
	too many errors.

ReportErrorHandler.Error =\
	Error at line:{0}, column:{1} of {2}\n\
	\ \ {3}\n

ReportErrorHandler.Warning =\
	Warning at line:{0}, column:{1} of {2}\n\
	\ \ {3}\n

ReportErrorHandler.Fatal =\
	Fatal error at line:{0}, column:{1} of {2}\n\
	\ \ {3}\n
	

#
# Driver messages
#

Driver.DTDValidation =\
	DTD validation will be done.

Driver.Parser =\
	using {0}

Driver.Usage =\
usage: java -jar msv.jar <opts> <grammar> <instance1> [<instance2> ...]\n\
\n\
options:\n\
\ \ -standalone: do not read external DTD specified in grammar/instances.\n\
\ \ -strict    : perform extra check to schema and report error.\n\
\ \ -dump      : dump grammar rather than perform validation.\n\
\ \ -debug     : generate debug messages.\n\
\ \ -verbose   : be verbose.\n\
\ \ -maxerror  : try to report more errors even if they may be false.\n\
\ \ -warning   : display all warning messages\n\
\ \ -catalog <catalogfile>\n\
\ \            : use a catalog file (TR9401) to resolve external entities\n\
\ \              for detail, see http://www.sun.com/xml/developers/resolver/\n\
\ \ -version   : display version number.\n\
\ \ -locale <code>\n\
\ \            : set the language of messages (i.e., "en","ja")\n\
\ \ -xerces    : use Xerces-J parser for parsing grammar and instances.\n\
\ \ -crimson   : use Crimson parser  for parsing grammar and instances.\n\
\ \ -oraclev2  : use OracleV2 parser for parsing grammar and instances.\n


Driver.UnrecognizedOption =\
	unrecognized option: {0}

Driver.StartParsingGrammar =\
	start parsing a grammar.

Driver.ParsingTime =\
	parsing took {0} ms.

Driver.ValidationTime =\
	validation took {0} ms.

Driver.Validating =\
	validating {0}

Driver.Valid =\
	the document is valid.

Driver.Invalid =\
	the document is NOT valid.

Driver.ErrLoadGrammar =\
	failed to load a grammar.

Driver.BailOut =\
	bailing out.

Driver.FailedToIgnoreExternalDTD =\
	failed to configure parser to ignore the external DTD.

Driver.SniffSchema =\
	detecting schema type. (use -relax/-trex option to skip this process)

Driver.UnknownSchema =\
	unrecognized schema "{0}".

Driver.WarningFound =\
	warnings are found. use -warning switch to see all warnings.